package main

import (
	"encoding/hex"
	"fmt"

	"github.com/hashgraph/hedera-sdk-go/v2"
)

func offline_sign(txBytes string) {
	var createTokenTx hedera.TokenCreateTransaction
	var tx interface{}
	var _txBytes []byte

	_txBytes, err := hex.DecodeString(txBytes)
	if err != nil {
		fmt.Println("error with txBytes")
	}

	tx, err = hedera.TransactionFromBytes(_txBytes)
	if err != nil {
		fmt.Println("error with txBytes")
		panic(err)
	}

	adminPrivateKey1, err := hedera.PrivateKeyFromString("302e020100300506032b657004220420c26e9b65de501380d105634579077492fd59b8614b0aedb55410b20a47469f28")
	adminPrivateKey2, err := hedera.PrivateKeyFromString("302e020100300506032b657004220420831e80289e120ecdf442c614e74e1bf8df85380b0dc7334f6f0a7943fa6d6d4d")
	treasurerPrivateKey, err := hedera.PrivateKeyFromString("302e020100300506032b657004220420c26e9b65de501380d105634579077492fd59b8614b0aedb55410b20a47469f28")

	createTokenTx = tx.(hedera.TokenCreateTransaction)
	signature1, err := adminPrivateKey1.SignTransaction(&createTokenTx.Transaction)
	signature2, err := adminPrivateKey2.SignTransaction(&createTokenTx.Transaction)
	signature3, err := treasurerPrivateKey.SignTransaction(&createTokenTx.Transaction)
	fmt.Printf("%#v\n", signature1)
	fmt.Printf("%#v\n", signature2)
	fmt.Printf("%#v\n", signature3)
}

func main() {
	offline_sign("0a9e032a9b030a96030a140a0b089097999a0610d0b2a3281205188ac3f415120218041880d0acf30e22020878ea01ee020a12585347442d746573746e65742d4f637431321212585347442d746573746e65742d4f637431322080c2d72f2a05188ac3f415324a32480a22122009fc854d1005984c386206cc68382900a0f9647d7a0ddd164d27f9dcd767f1f60a2212205c97a1e4dff419af615f1085ed533e35514e347342ad7fbc79820fb234d6e9e2426e326c0a221220068f0eab7ae589debf5d0ddf7db1b0acf844c254ce472a4bddcc7b04f07d8dc40a221220f556b42ed6d5a7a95bf5c44369296c14984831eaa2010d6a3b0450fac5ec5d030a22122099945810ccac97cf9fc98877dad6028576cd901e967830a98ea5e2b10bdbeb01526e326c0a221220a2ca56b83a3e2011e1b81316553dfbd4e13777e2924d55edfff07651914945200a2212205832813ab4ff848a60dfa7ef55f8930855ceda7bf34f6b2a2bd5b97b092e14e80a221220cd3b39d33a3eea3dfdbfa86a7f938fb42be6f702a47799c13c3a3bddfe516b527205188ac3f4157a0508d0c8e10312000a9e032a9b030a96030a140a0b089097999a0610d0b2a3281205188ac3f415120218041880d0acf30e22020878ea01ee020a12585347442d746573746e65742d4f637431321212585347442d746573746e65742d4f637431322080c2d72f2a05188ac3f415324a32480a22122009fc854d1005984c386206cc68382900a0f9647d7a0ddd164d27f9dcd767f1f60a2212205c97a1e4dff419af615f1085ed533e35514e347342ad7fbc79820fb234d6e9e2426e326c0a221220068f0eab7ae589debf5d0ddf7db1b0acf844c254ce472a4bddcc7b04f07d8dc40a221220f556b42ed6d5a7a95bf5c44369296c14984831eaa2010d6a3b0450fac5ec5d030a22122099945810ccac97cf9fc98877dad6028576cd901e967830a98ea5e2b10bdbeb01526e326c0a221220a2ca56b83a3e2011e1b81316553dfbd4e13777e2924d55edfff07651914945200a2212205832813ab4ff848a60dfa7ef55f8930855ceda7bf34f6b2a2bd5b97b092e14e80a221220cd3b39d33a3eea3dfdbfa86a7f938fb42be6f702a47799c13c3a3bddfe516b527205188ac3f4157a0508d0c8e10312000a9e032a9b030a96030a140a0b089097999a0610d0b2a3281205188ac3f415120218041880d0acf30e22020878ea01ee020a12585347442d746573746e65742d4f637431321212585347442d746573746e65742d4f637431322080c2d72f2a05188ac3f415324a32480a22122009fc854d1005984c386206cc68382900a0f9647d7a0ddd164d27f9dcd767f1f60a2212205c97a1e4dff419af615f1085ed533e35514e347342ad7fbc79820fb234d6e9e2426e326c0a221220068f0eab7ae589debf5d0ddf7db1b0acf844c254ce472a4bddcc7b04f07d8dc40a221220f556b42ed6d5a7a95bf5c44369296c14984831eaa2010d6a3b0450fac5ec5d030a22122099945810ccac97cf9fc98877dad6028576cd901e967830a98ea5e2b10bdbeb01526e326c0a221220a2ca56b83a3e2011e1b81316553dfbd4e13777e2924d55edfff07651914945200a2212205832813ab4ff848a60dfa7ef55f8930855ceda7bf34f6b2a2bd5b97b092e14e80a221220cd3b39d33a3eea3dfdbfa86a7f938fb42be6f702a47799c13c3a3bddfe516b527205188ac3f4157a0508d0c8e1031200")
}
